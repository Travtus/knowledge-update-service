AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM template for the knowldge update service

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 900

Parameters:
  EnvironmentName:
    Type: String
    AllowedValues: ["dev", "qa", "uat", "prod"]
    Default: "dev"
  ProjectName:
    Type: String
    Description: "Project name - used for grouping multiple services under one project."
    Default: "knowledge-update-service"
  EventBusName:
    Type: String
    Description: "The name of the event bus to publish events to."
    Default: "test-chat"

Resources:
  KnowledgeUpdate:
    Type: AWS::Serverless::Function
    FunctionName:
      !Join [
        "-",
        [!Ref ProjectName, !Ref EnvironmentName, "knowledge-update-service"],
      ]
    Properties:
      Description: "AWS Lambda to process knowledge update events from an SQS queue"
      CodeUri: .
      Handler: knowledge_update.lambda_handler.handle
      Runtime: python3.12
      Role: !GetAtt KnowledgeUpdateRole.Arn
      Timeout: 900
      Environment:
        Variables:
          EVENT_BUS_NAME: !Ref EventBusName
      Events:
        KnowledgeUpdateEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt KnowledgeUpdateQueue.Arn
            BatchSize: 1

  KnowledgeUpdateQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 172800
      VisibilityTimeout: 1800
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt KnowledgeUpdateDLQ.Arn
        maxReceiveCount: 5
  KnowledgeUpdateDLQ:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 172800

  KnowledgeUpdateListener:
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ["-", ["knowledge-update", !Ref EnvironmentName]]
      Description: "Knowledge update Listener"
      EventBusName: !Ref EventBusName
      EventPattern:
        detail-type:
          - knowledge-update
          - community-update
          - periodic-refresh
      Targets:
        - Arn: !GetAtt KnowledgeUpdateQueue.Arn
          Id: knowledge-update-sqs

  EventBridgeToKnowledgeUpdateSqsPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: SQS:SendMessage
            Resource: !GetAtt KnowledgeUpdateQueue.Arn
      Queues:
        - Ref: KnowledgeUpdateQueue

  KnowledgeUpdateRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowLambdaServiceToAssumeRole"
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "events.amazonaws.com"
      Policies:
        - PolicyName: AllowSQSAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllowSQSAccess
                Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:DeleteMessage
                  - sqs:ReceiveMessage
                  - sqs:GetQueueAttributes
                Resource:
                  - !GetAtt KnowledgeUpdateDLQ.Arn
                  - !GetAtt KnowledgeUpdateQueue.Arn
        - PolicyName: EventBusPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: EventBusPermission
                Effect: Allow
                Action:
                  - events:PutEvents
                Resource:
                  - !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/${EventBusName}"

Outputs:
  KnowledgeUpdateRoleArn:
    Description: >
      IAM Role for Knowledge Update lambda with basic execute policy.
    Value: !GetAtt KnowledgeUpdateRole.Arn
  KnowledgeUpdateRoleName:
    Description: >
      IAM Role for lambda with basic execute policy
    Value: !Ref KnowledgeUpdateRole
